Ques 1):- Split an array into two equal Sum subarrays (GFG):-
Ans:
bool canSplit(vector<int>& arr) {
        // code here
        int total_sum = 0;
        for(int i=0;i<arr.size();i++)
        {
            total_sum += arr[i];
        }
        
        
        int prefix = 0;
        for(int i=0;i<arr.size()-1;i++)
        {
            prefix += arr[i];
            int ans = total_sum-prefix;
            if(ans == prefix)
            return true;
        }
        return false;
    }
*********************************************************************************************************************************************************************
Ques 2):- Largest sum of a contagious subarray (GFG) :-
Ans:
 int maxSubarraySum(vector<int> &arr) {
        // Your code here
        
        int maxi = INT_MIN;
        
        int prefix = 0;
        for(int i=0;i<arr.size();i++)
        {
            prefix += arr[i];
            
            maxi = max(prefix,maxi);
            
            if(prefix < 0)
            prefix = 0;
            
        }
        return maxi;
    }
********************************************************************************************************************************************************
Ques 3):- Best time to buy and sell stock (Leetcode):-
Ans:
int maxProfit(vector<int>& prices) {
        int maxi = 0;
        int min_price = INT_MAX;

        for(int i=0;i<prices.size();i++)
        {
            min_price = min(min_price,prices[i]);
            int profit = prices[i] - min_price;

            maxi = max(maxi,profit);
        }
        return maxi;
    }
***********************************************************************************************************************************************************
Ques 4) :- Print All Subrray of given Array :-
Ans:
void printSubarrays(int numbers[]) {
       for (int i = 0; i < numbers.length; i++) {
            for (int j = i; j < numbers.length; j++) {
                for (int k = i; k <= j; k++) {
                    cout<<numbers[k]<< " ";
                }
                cout<<endl;
            }
            cout<<endl;
        }
    }
*************************************************************************************************************************************************
Ques 5) :- 
